{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\dell\\\\Desktop\\\\vatsal-patel\\\\contact-crud\\\\contact-crud\\\\src\\\\pages\\\\SignUp.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { Link, useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction SignUp() {\n  _s();\n\n  let navigate = useNavigate();\n  const error = document.getElementsByClassName('error');\n  const [form, setForm] = useState({\n    uuid: '',\n    email: '',\n    password: ''\n  });\n  const [doValid, setDoValid] = useState(false);\n\n  const onFormSubmit = event => {\n    setDoValid(true);\n    event.preventDefault();\n    const users = JSON.parse(localStorage.getItem('users'));\n\n    if (validate()) {\n      setForm({ ...form,\n        uuid: () => create_UUID()\n      });\n      console.log(form);\n\n      if (!users) {\n        localStorage.setItem('users', JSON.stringify([form]));\n        navigate('/');\n      } else if (isUserSignedUp(users)) {\n        localStorage.setItem('users', JSON.stringify([...users, form]));\n        navigate('/');\n      } else {\n        error[0].textContent = '*User Exist, SignIn';\n      }\n    }\n  }; // HELPERS\n\n\n  const validate = () => {\n    error[1].textContent = form.email.match( // eslint-disable-next-line no-useless-escape\n    /^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/) ? '' : '*Invalid Email';\n    error[3].textContent = form.password === document.signupForm.confirmPassword.value ? '' : '*Enter same password';\n    return error[1].textContent === error[3].textContent;\n  };\n\n  const isUserSignedUp = users => {\n    let count = 0;\n    users.forEach(user => {\n      if (user.email === form.email) {\n        count++;\n      }\n    });\n    return count === 0;\n  };\n\n  const create_UUID = () => {\n    var dt = new Date().getTime();\n    var uuid = 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\n      var r = (dt + Math.random() * 16) % 16 | 0;\n      dt = Math.floor(dt / 16);\n      return (c === 'x' ? r : r & 0x3 | 0x8).toString(16);\n    });\n    return uuid;\n  }; // HELPERS END\n\n\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    id: \"signup\",\n    className: \"center-my-child\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      name: \"signupForm\",\n      onSubmit: event => onFormSubmit(event),\n      children: [/*#__PURE__*/_jsxDEV(\"header\", {\n        children: \"SignUp\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-field-wrapper\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input-field\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"email\",\n            children: \"Email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"email\",\n            className: \"email\",\n            required: true,\n            onChange: e => {\n              setForm({ ...form,\n                email: e.target.value\n              });\n              if (doValid) validate();\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"error\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input-field\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"password\",\n            children: \"Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"password\",\n            name: \"password\",\n            className: \"password\",\n            required: true,\n            onChange: e => setForm({ ...form,\n              password: e.target.value\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"error\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input-field\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"confirmPassword\",\n            children: \"Confirm Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"password\",\n            name: \"confirmPassword\",\n            className: \"password\",\n            required: true,\n            onChange: e => {\n              setForm({ ...form,\n                confirmPassword: e.target.value\n              });\n              if (doValid) validate();\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"error\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"btn-wrapper\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          id: \"signup-btn\",\n          className: \"btn\",\n          children: \"GO\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"or-link\",\n        children: [\"or \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 24\n        }, this), /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/\",\n          children: \"SignIn\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 9\n  }, this);\n}\n\n_s(SignUp, \"cJmtT2YG/ZPwmH3RAAJnA8zPgsU=\", false, function () {\n  return [useNavigate];\n});\n\n_c = SignUp;\nexport default SignUp;\n\nvar _c;\n\n$RefreshReg$(_c, \"SignUp\");","map":{"version":3,"sources":["C:/Users/dell/Desktop/vatsal-patel/contact-crud/contact-crud/src/pages/SignUp.js"],"names":["React","useState","Link","useNavigate","SignUp","navigate","error","document","getElementsByClassName","form","setForm","uuid","email","password","doValid","setDoValid","onFormSubmit","event","preventDefault","users","JSON","parse","localStorage","getItem","validate","create_UUID","console","log","setItem","stringify","isUserSignedUp","textContent","match","signupForm","confirmPassword","value","count","forEach","user","dt","Date","getTime","replace","c","r","Math","random","floor","toString","e","target"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\nimport { Link, useNavigate } from 'react-router-dom'\n\nfunction SignUp() {\n    let navigate = useNavigate()\n    const error = document.getElementsByClassName('error')\n    const [form, setForm] = useState({\n        uuid: '',\n        email: '',\n        password: '',\n    })\n    const [doValid, setDoValid] = useState(false)\n\n    const onFormSubmit = (event) => {\n        setDoValid(true)\n        event.preventDefault()\n        const users = JSON.parse(localStorage.getItem('users'))\n\n        if (validate()) {\n            setForm({ ...form, uuid: () => create_UUID() })\n            console.log(form)\n            if (!users) {\n                localStorage.setItem('users', JSON.stringify([form]))\n                navigate('/')\n            } else if (isUserSignedUp(users)) {\n                localStorage.setItem('users', JSON.stringify([...users, form]))\n                navigate('/')\n            } else {\n                error[0].textContent = '*User Exist, SignIn'\n            }\n        }\n    }\n\n    // HELPERS\n\n    const validate = () => {\n        error[1].textContent = form.email.match(\n            // eslint-disable-next-line no-useless-escape\n            /^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/\n        )\n            ? ''\n            : '*Invalid Email'\n\n        error[3].textContent =\n            form.password === document.signupForm.confirmPassword.value\n                ? ''\n                : '*Enter same password'\n\n        return error[1].textContent === error[3].textContent\n    }\n\n    const isUserSignedUp = (users) => {\n        let count = 0\n        users.forEach((user) => {\n            if (user.email === form.email) {\n                count++\n            }\n        })\n        return count === 0\n    }\n\n    const create_UUID = () => {\n        var dt = new Date().getTime()\n        var uuid = 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(\n            /[xy]/g,\n            function (c) {\n                var r = (dt + Math.random() * 16) % 16 | 0\n                dt = Math.floor(dt / 16)\n                return (c === 'x' ? r : (r & 0x3) | 0x8).toString(16)\n            }\n        )\n        return uuid\n    }\n\n    // HELPERS END\n\n    return (\n        <section id=\"signup\" className=\"center-my-child\">\n            <form name=\"signupForm\" onSubmit={(event) => onFormSubmit(event)}>\n                <header>SignUp</header>\n                <p className=\"error\"></p>\n                <div className=\"input-field-wrapper\">\n                    <div className=\"input-field\">\n                        <label htmlFor=\"email\">Email</label>\n                        <br />\n                        <input\n                            type=\"text\"\n                            name=\"email\"\n                            className=\"email\"\n                            required\n                            onChange={(e) => {\n                                setForm({\n                                    ...form,\n                                    email: e.target.value,\n                                })\n                                if (doValid) validate()\n                            }}\n                        />\n                        <p className=\"error\"></p>\n                    </div>\n                    <div className=\"input-field\">\n                        <label htmlFor=\"password\">Password</label>\n                        <br />\n                        <input\n                            type=\"password\"\n                            name=\"password\"\n                            className=\"password\"\n                            required\n                            onChange={(e) =>\n                                setForm({\n                                    ...form,\n                                    password: e.target.value,\n                                })\n                            }\n                        />\n                        <p className=\"error\"></p>\n                    </div>\n                    <div className=\"input-field\">\n                        <label htmlFor=\"confirmPassword\">\n                            Confirm Password\n                        </label>\n                        <br />\n                        <input\n                            type=\"password\"\n                            name=\"confirmPassword\"\n                            className=\"password\"\n                            required\n                            onChange={(e) => {\n                                setForm({\n                                    ...form,\n                                    confirmPassword: e.target.value,\n                                })\n                                if (doValid) validate()\n                            }}\n                        />\n                        <p className=\"error\"></p>\n                    </div>\n                </div>\n                <div className=\"btn-wrapper\">\n                    <button type=\"submit\" id=\"signup-btn\" className=\"btn\">\n                        GO\n                    </button>\n                </div>\n                <p className=\"or-link\">\n                    or <br />\n                    <Link to=\"/\">SignIn</Link>\n                </p>\n            </form>\n        </section>\n    )\n}\n\nexport default SignUp\n"]},"metadata":{},"sourceType":"module"}