{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\dell\\\\Desktop\\\\vatsal-patel\\\\contact-crud\\\\contact-crud\\\\src\\\\pages\\\\SignUp.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { Link, useNavigate } from 'react-router-dom';\nimport { AuthConsumer } from '../helper/AuthContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction SignUp() {\n  _s();\n\n  let navigate = useNavigate();\n  const error = document.getElementsByClassName('error');\n  const [form, setForm] = useState({\n    email: '',\n    password: '',\n    confirmPassword: ''\n  });\n\n  const onSignUp = event => {\n    event.preventDefault();\n    const data = {\n      uuid: create_UUID(),\n      email: form.email.value,\n      password: form.password.value\n    };\n    const users = JSON.parse(localStorage.getItem('users'));\n\n    if (validate(form)) {\n      if (!users) {\n        localStorage.setItem('users', JSON.stringify([data]));\n        navigate('/home');\n      } else if (isUserSignedUp(users, data.email)) {\n        localStorage.setItem('users', JSON.stringify([...users, data]));\n        navigate('/home');\n      } else {\n        form.children[1].textContent = '*User Exist, SignIn';\n      }\n    }\n  }; // HELPERS\n\n\n  const validate = form => {\n    form.children[2].children[0].children[3].textContent = form.email.value.match(/^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/) ? '' : '*Invalid Email';\n    form.children[2].children[2].children[3].textContent = form.password.value === form.confirmPassword.value ? '' : '*Enter same password';\n    return form.children[2].children[0].children[3].textContent === form.children[2].children[2].children[3].textContent;\n  };\n\n  const isUserSignedUp = (users, email) => {\n    let count = 0;\n    users.forEach(user => {\n      if (user.email === email) {\n        count++;\n      }\n    });\n    return count === 0;\n  };\n\n  const create_UUID = () => {\n    var dt = new Date().getTime();\n    var uuid = 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\n      var r = (dt + Math.random() * 16) % 16 | 0;\n      dt = Math.floor(dt / 16);\n      return (c === 'x' ? r : r & 0x3 | 0x8).toString(16);\n    });\n    return uuid;\n  }; // HELPERS END\n\n\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    id: \"signup\",\n    className: \"center-my-child\",\n    children: /*#__PURE__*/_jsxDEV(AuthConsumer, {\n      children: _ref => {\n        let {\n          login\n        } = _ref;\n        return /*#__PURE__*/_jsxDEV(\"form\", {\n          name: \"signinForm\",\n          onSubmit: event => onSignUp(event, login),\n          children: [/*#__PURE__*/_jsxDEV(\"header\", {\n            children: \"SignUp\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"error\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"input-field-wrapper\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"input-field\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"email\",\n                children: \"Email\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 94,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 95,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"email\",\n                name: \"email\",\n                className: \"email\",\n                required: true,\n                onChange: e => setForm({ ...form,\n                  email: e.target.value\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 96,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"error\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 108,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 93,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"input-field\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"password\",\n                children: \"Password\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 111,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 112,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"password\",\n                name: \"password\",\n                className: \"password\",\n                required: true,\n                onChange: e => setForm({ ...form,\n                  password: e.target.value\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 113,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"error\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 125,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 110,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"input-field\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"confirmPassword\",\n                children: \"Confirm Password\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 128,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 131,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"password\",\n                name: \"confirmPassword\",\n                className: \"password\",\n                required: true,\n                onChange: e => setForm({ ...form,\n                  confirmPassword: e.target.value\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 132,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"error\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 144,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 127,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"btn-wrapper\",\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"submit\",\n              id: \"signup-btn\",\n              className: \"btn\",\n              children: \"GO\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 148,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 147,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"or-link\",\n            children: [\"or \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 157,\n              columnNumber: 32\n            }, this), /*#__PURE__*/_jsxDEV(Link, {\n              to: \"/signin\",\n              children: \"SignIn\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 158,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 156,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 21\n        }, this);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 83,\n    columnNumber: 9\n  }, this);\n}\n\n_s(SignUp, \"r6WLjifNYL4XikR/MvJu1iH6DyE=\", false, function () {\n  return [useNavigate];\n});\n\n_c = SignUp;\nexport default SignUp;\n\nvar _c;\n\n$RefreshReg$(_c, \"SignUp\");","map":{"version":3,"sources":["C:/Users/dell/Desktop/vatsal-patel/contact-crud/contact-crud/src/pages/SignUp.js"],"names":["React","useState","Link","useNavigate","AuthConsumer","SignUp","navigate","error","document","getElementsByClassName","form","setForm","email","password","confirmPassword","onSignUp","event","preventDefault","data","uuid","create_UUID","value","users","JSON","parse","localStorage","getItem","validate","setItem","stringify","isUserSignedUp","children","textContent","match","count","forEach","user","dt","Date","getTime","replace","c","r","Math","random","floor","toString","login","e","target"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\nimport { Link, useNavigate } from 'react-router-dom'\nimport { AuthConsumer } from '../helper/AuthContext'\n\nfunction SignUp() {\n    let navigate = useNavigate()\n    const error = document.getElementsByClassName('error')\n    const [form, setForm] = useState({\n        email: '',\n        password: '',\n        confirmPassword: '',\n    })\n\n    const onSignUp = (event) => {\n        event.preventDefault()\n        const data = {\n            uuid: create_UUID(),\n            email: form.email.value,\n            password: form.password.value,\n        }\n        const users = JSON.parse(localStorage.getItem('users'))\n\n        if (validate(form)) {\n            if (!users) {\n                localStorage.setItem('users', JSON.stringify([data]))\n                navigate('/home')\n            } else if (isUserSignedUp(users, data.email)) {\n                localStorage.setItem('users', JSON.stringify([...users, data]))\n                navigate('/home')\n            } else {\n                form.children[1].textContent = '*User Exist, SignIn'\n            }\n        }\n    }\n\n    // HELPERS\n\n    const validate = (form) => {\n        form.children[2].children[0].children[3].textContent =\n            form.email.value.match(\n                /^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/\n            )\n                ? ''\n                : '*Invalid Email'\n\n        form.children[2].children[2].children[3].textContent =\n            form.password.value === form.confirmPassword.value\n                ? ''\n                : '*Enter same password'\n\n        return (\n            form.children[2].children[0].children[3].textContent ===\n            form.children[2].children[2].children[3].textContent\n        )\n    }\n\n    const isUserSignedUp = (users, email) => {\n        let count = 0\n        users.forEach((user) => {\n            if (user.email === email) {\n                count++\n            }\n        })\n        return count === 0\n    }\n\n    const create_UUID = () => {\n        var dt = new Date().getTime()\n        var uuid = 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(\n            /[xy]/g,\n            function (c) {\n                var r = (dt + Math.random() * 16) % 16 | 0\n                dt = Math.floor(dt / 16)\n                return (c === 'x' ? r : (r & 0x3) | 0x8).toString(16)\n            }\n        )\n        return uuid\n    }\n\n    // HELPERS END\n\n    return (\n        <section id=\"signup\" className=\"center-my-child\">\n            <AuthConsumer>\n                {({ login }) => (\n                    <form\n                        name=\"signinForm\"\n                        onSubmit={(event) => onSignUp(event, login)}\n                    >\n                        <header>SignUp</header>\n                        <p className=\"error\"></p>\n                        <div className=\"input-field-wrapper\">\n                            <div className=\"input-field\">\n                                <label htmlFor=\"email\">Email</label>\n                                <br />\n                                <input\n                                    type=\"email\"\n                                    name=\"email\"\n                                    className=\"email\"\n                                    required\n                                    onChange={(e) =>\n                                        setForm({\n                                            ...form,\n                                            email: e.target.value,\n                                        })\n                                    }\n                                />\n                                <p className=\"error\"></p>\n                            </div>\n                            <div className=\"input-field\">\n                                <label htmlFor=\"password\">Password</label>\n                                <br />\n                                <input\n                                    type=\"password\"\n                                    name=\"password\"\n                                    className=\"password\"\n                                    required\n                                    onChange={(e) =>\n                                        setForm({\n                                            ...form,\n                                            password: e.target.value,\n                                        })\n                                    }\n                                />\n                                <p className=\"error\"></p>\n                            </div>\n                            <div className=\"input-field\">\n                                <label htmlFor=\"confirmPassword\">\n                                    Confirm Password\n                                </label>\n                                <br />\n                                <input\n                                    type=\"password\"\n                                    name=\"confirmPassword\"\n                                    className=\"password\"\n                                    required\n                                    onChange={(e) =>\n                                        setForm({\n                                            ...form,\n                                            confirmPassword: e.target.value,\n                                        })\n                                    }\n                                />\n                                <p className=\"error\"></p>\n                            </div>\n                        </div>\n                        <div className=\"btn-wrapper\">\n                            <button\n                                type=\"submit\"\n                                id=\"signup-btn\"\n                                className=\"btn\"\n                            >\n                                GO\n                            </button>\n                        </div>\n                        <p className=\"or-link\">\n                            or <br />\n                            <Link to=\"/signin\">SignIn</Link>\n                        </p>\n                    </form>\n                )}\n            </AuthConsumer>\n        </section>\n    )\n}\n\nexport default SignUp\n"]},"metadata":{},"sourceType":"module"}