{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\dell\\\\Desktop\\\\vatsal-patel\\\\contact-crud\\\\contact-crud\\\\src\\\\pages\\\\SignIn.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { Form, Button, Alert } from 'react-bootstrap';\nimport { Link, useNavigate } from 'react-router-dom';\nimport { AuthConsumer } from '../helper/AuthContext';\nimport { validateEmail, validatePassword } from './../helper/HelperFunctions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction SignIn() {\n  _s();\n\n  const navigate = useNavigate();\n  const error = document.getElementsByClassName('error');\n  const [form, setForm] = useState({\n    userId: '',\n    email: '',\n    password: ''\n  });\n  const [doValid, setDoValid] = useState(false);\n\n  const onFormSubmit = (event, login) => {\n    event.preventDefault();\n    setDoValid(true);\n    const users = JSON.parse(localStorage.getItem('users'));\n\n    if (validate()) {\n      if (!users) {\n        error[0].textContent = '*New user, Please SignUp';\n      } else if (isUserValid(users)) {\n        login(form.userId);\n        navigate('/home');\n      }\n    }\n  };\n\n  const validate = () => {\n    error[0].textContent = '';\n    error[1].textContent = validateEmail(form.email);\n    const errs = validatePassword(form.password);\n    error[3].textContent = errs[1];\n    return error[1].textContent === '' && error[2].textContent === '' && error[3].textContent === '';\n  };\n\n  const isUserValid = users => {\n    let count1 = 0,\n        count2 = 0;\n    users.forEach(user => {\n      if (user.email === form.email) {\n        count1++;\n\n        if (user.password === form.password) {\n          count2++;\n          error[2].textContent = '';\n          form.userId = user.userId;\n        } else {\n          error[2].textContent = '*Wrong password';\n          error[0].textContent = '';\n        }\n      }\n    });\n\n    if (count1 === 0) {\n      error[2].textContent = '';\n      error[0].textContent = '*New user, Please SignUp';\n      return false;\n    } else if (count2 === 0) {\n      return false;\n    } else {\n      return true;\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    id: \"signin\",\n    className: \"center-my-child\",\n    children: /*#__PURE__*/_jsxDEV(AuthConsumer, {\n      children: _ref => {\n        let {\n          login\n        } = _ref;\n        return /*#__PURE__*/_jsxDEV(Form, {\n          onSubmit: event => onFormSubmit(event, login),\n          children: [/*#__PURE__*/_jsxDEV(Alert.Heading, {\n            children: \"Sign In\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"error\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            className: \"mb-3\",\n            controlId: \"formBasicEmail\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Email address\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              onChange: e => {\n                setForm({ ...form,\n                  email: e.target.value\n                });\n                if (doValid) validate();\n              },\n              type: \"email\",\n              placeholder: \"Enter email\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"error\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 90,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            className: \"mb-3\",\n            controlId: \"formBasicPassword\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 97,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"password\",\n              placeholder: \"Password\",\n              onChange: e => setForm({ ...form,\n                password: e.target.value\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 98,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"error\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 108,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            className: \"mb-3 d-grid\",\n            controlId: \"formBasicButton\",\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"primary\",\n              type: \"submit\",\n              children: \"Submit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 115,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Form.Text, {\n            className: \"or-link\",\n            children: [\"Or\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 122,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Link, {\n              to: \"/signup\",\n              children: \"Sign-Up\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 123,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 21\n        }, this);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 9\n  }, this);\n}\n\n_s(SignIn, \"62OMdKgentrz+WYovWTwPsTNWo4=\", false, function () {\n  return [useNavigate];\n});\n\n_c = SignIn;\nexport default SignIn;\n\nvar _c;\n\n$RefreshReg$(_c, \"SignIn\");","map":{"version":3,"sources":["C:/Users/dell/Desktop/vatsal-patel/contact-crud/contact-crud/src/pages/SignIn.js"],"names":["React","useState","Form","Button","Alert","Link","useNavigate","AuthConsumer","validateEmail","validatePassword","SignIn","navigate","error","document","getElementsByClassName","form","setForm","userId","email","password","doValid","setDoValid","onFormSubmit","event","login","preventDefault","users","JSON","parse","localStorage","getItem","validate","textContent","isUserValid","errs","count1","count2","forEach","user","e","target","value"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\nimport { Form, Button, Alert } from 'react-bootstrap'\nimport { Link, useNavigate } from 'react-router-dom'\nimport { AuthConsumer } from '../helper/AuthContext'\nimport { validateEmail, validatePassword } from './../helper/HelperFunctions'\n\nfunction SignIn() {\n    const navigate = useNavigate()\n    const error = document.getElementsByClassName('error')\n    const [form, setForm] = useState({ userId: '', email: '', password: '' })\n    const [doValid, setDoValid] = useState(false)\n\n    const onFormSubmit = (event, login) => {\n        event.preventDefault()\n        setDoValid(true)\n        const users = JSON.parse(localStorage.getItem('users'))\n\n        if (validate()) {\n            if (!users) {\n                error[0].textContent = '*New user, Please SignUp'\n            } else if (isUserValid(users)) {\n                login(form.userId)\n                navigate('/home')\n            }\n        }\n    }\n\n    const validate = () => {\n        error[0].textContent = ''\n        error[1].textContent = validateEmail(form.email)\n\n        const errs = validatePassword(form.password)\n        error[3].textContent = errs[1]\n\n        return (\n            error[1].textContent === '' &&\n            error[2].textContent === '' &&\n            error[3].textContent === ''\n        )\n    }\n\n    const isUserValid = (users) => {\n        let count1 = 0,\n            count2 = 0\n        users.forEach((user) => {\n            if (user.email === form.email) {\n                count1++\n                if (user.password === form.password) {\n                    count2++\n                    error[2].textContent = ''\n                    form.userId = user.userId\n                } else {\n                    error[2].textContent = '*Wrong password'\n                    error[0].textContent = ''\n                }\n            }\n        })\n\n        if (count1 === 0) {\n            error[2].textContent = ''\n            error[0].textContent = '*New user, Please SignUp'\n            return false\n        } else if (count2 === 0) {\n            return false\n        } else {\n            return true\n        }\n    }\n\n    return (\n        <section id=\"signin\" className=\"center-my-child\">\n            <AuthConsumer>\n                {({ login }) => (\n                    <Form onSubmit={(event) => onFormSubmit(event, login)}>\n                        <Alert.Heading>Sign In</Alert.Heading>\n                        <p className=\"error\"></p>\n                        <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\n                            <Form.Label>Email address</Form.Label>\n                            <Form.Control\n                                onChange={(e) => {\n                                    setForm({\n                                        ...form,\n                                        email: e.target.value,\n                                    })\n                                    if (doValid) validate()\n                                }}\n                                type=\"email\"\n                                placeholder=\"Enter email\"\n                            />\n                            <p className=\"error\"></p>\n                        </Form.Group>\n\n                        <Form.Group\n                            className=\"mb-3\"\n                            controlId=\"formBasicPassword\"\n                        >\n                            <Form.Label>Password</Form.Label>\n                            <Form.Control\n                                type=\"password\"\n                                placeholder=\"Password\"\n                                onChange={(e) =>\n                                    setForm({\n                                        ...form,\n                                        password: e.target.value,\n                                    })\n                                }\n                            />\n                            <p className=\"error\"></p>\n                        </Form.Group>\n\n                        <Form.Group\n                            className=\"mb-3 d-grid\"\n                            controlId=\"formBasicButton\"\n                        >\n                            <Button variant=\"primary\" type=\"submit\">\n                                Submit\n                            </Button>\n                        </Form.Group>\n\n                        <Form.Text className=\"or-link\">\n                            Or\n                            <br />\n                            <Link to=\"/signup\">Sign-Up</Link>\n                        </Form.Text>\n                    </Form>\n                )}\n            </AuthConsumer>\n        </section>\n    )\n}\n\nexport default SignIn\n"]},"metadata":{},"sourceType":"module"}