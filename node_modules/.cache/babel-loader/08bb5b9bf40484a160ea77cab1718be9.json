{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\dell\\\\Desktop\\\\vatsal-patel\\\\contact-crud\\\\contact-crud\\\\src\\\\components\\\\EditModal.js\",\n    _s = $RefreshSig$();\n\nimport { Button, Form, Modal } from 'react-bootstrap';\nimport React, { useEffect, useState } from 'react';\nimport { getUUID } from './../helper/HelperFunctions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction EditModal(_ref) {\n  _s();\n\n  let {\n    activeUserId,\n    title,\n    updateContacts,\n    details\n  } = _ref;\n  const [show, setShow] = useState(false);\n  const [form, setForm] = useState(details);\n  console.log(details);\n\n  const handleClose = () => setShow(false);\n\n  const handleShow = () => setShow(true);\n\n  const imageUpload = e => {\n    const file = e.target.files[0];\n    getBase64(file).then(base64 => {\n      setForm({ ...form,\n        profile: base64\n      });\n    });\n  };\n\n  const getBase64 = file => {\n    return new Promise((resolve, reject) => {\n      const reader = new FileReader();\n\n      reader.onload = () => resolve(reader.result);\n\n      reader.onerror = error => reject(error);\n\n      reader.readAsDataURL(file);\n    });\n  };\n\n  useEffect(() => {\n    setForm({ ...form,\n      contactId: getUUID()\n    });\n  }, []);\n\n  const onFormSubmit = e => {\n    updateContacts();\n    const userContacts = JSON.parse(localStorage.getItem('userContacts'));\n\n    if (!userContacts) {\n      localStorage.setItem('userContacts', JSON.stringify([form]));\n    } else {\n      localStorage.setItem('userContacts', JSON.stringify([...userContacts, form]));\n    }\n\n    handleClose();\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Button, {\n      variant: \"primary\",\n      onClick: handleShow,\n      children: \"Edit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      show: show,\n      onHide: handleClose,\n      centered: true,\n      children: /*#__PURE__*/_jsxDEV(Form, {\n        onSubmit: e => {\n          onFormSubmit(e);\n        },\n        children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n          closeButton: true,\n          children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n            children: title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n          children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n            controlId: \"formFile\",\n            className: \"mb-3\",\n            onChange: e => {\n              imageUpload(e);\n            },\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Profile\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"file\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            className: \"mb-3\",\n            controlId: \"formBasicName\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 73,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"text\",\n              placeholder: \"Enter Name\",\n              onChange: e => setForm({ ...form,\n                name: e.target.value\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            className: \"mb-3\",\n            controlId: \"formBasicEmail\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Email address\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 87,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"email\",\n              placeholder: \"Enter email\",\n              onChange: e => setForm({ ...form,\n                email: e.target.value\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 88,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            className: \"mb-3\",\n            controlId: \"formBasicPhone\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Phone Number\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 101,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"tel\",\n              placeholder: \"Enter phone number\",\n              onChange: e => setForm({ ...form,\n                phone: e.target.value\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 102,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Modal.Footer, {\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            variant: \"secondary\",\n            onClick: handleClose,\n            children: \"Close\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            type: \"submit\",\n            variant: \"primary\",\n            children: \"Save Changes\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n\n_s(EditModal, \"hVMt5pAPQ6LD7m3IWRBk/oMCNSc=\");\n\n_c = EditModal;\nexport default EditModal;\n\nvar _c;\n\n$RefreshReg$(_c, \"EditModal\");","map":{"version":3,"sources":["C:/Users/dell/Desktop/vatsal-patel/contact-crud/contact-crud/src/components/EditModal.js"],"names":["Button","Form","Modal","React","useEffect","useState","getUUID","EditModal","activeUserId","title","updateContacts","details","show","setShow","form","setForm","console","log","handleClose","handleShow","imageUpload","e","file","target","files","getBase64","then","base64","profile","Promise","resolve","reject","reader","FileReader","onload","result","onerror","error","readAsDataURL","contactId","onFormSubmit","userContacts","JSON","parse","localStorage","getItem","setItem","stringify","name","value","email","phone"],"mappings":"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","sourcesContent":["import { Button, Form, Modal } from 'react-bootstrap'\r\nimport React, { useEffect, useState } from 'react'\r\nimport { getUUID } from './../helper/HelperFunctions'\r\n\r\nfunction EditModal({ activeUserId, title, updateContacts, details }) {\r\n    const [show, setShow] = useState(false)\r\n    const [form, setForm] = useState(details)\r\n    console.log(details)\r\n\r\n    const handleClose = () => setShow(false)\r\n    const handleShow = () => setShow(true)\r\n\r\n    const imageUpload = (e) => {\r\n        const file = e.target.files[0]\r\n        getBase64(file).then((base64) => {\r\n            setForm({ ...form, profile: base64 })\r\n        })\r\n    }\r\n    const getBase64 = (file) => {\r\n        return new Promise((resolve, reject) => {\r\n            const reader = new FileReader()\r\n            reader.onload = () => resolve(reader.result)\r\n            reader.onerror = (error) => reject(error)\r\n            reader.readAsDataURL(file)\r\n        })\r\n    }\r\n\r\n    useEffect(() => {\r\n        setForm({ ...form, contactId: getUUID() })\r\n    }, [])\r\n\r\n    const onFormSubmit = (e) => {\r\n        updateContacts()\r\n        const userContacts = JSON.parse(localStorage.getItem('userContacts'))\r\n\r\n        if (!userContacts) {\r\n            localStorage.setItem('userContacts', JSON.stringify([form]))\r\n        } else {\r\n            localStorage.setItem(\r\n                'userContacts',\r\n                JSON.stringify([...userContacts, form])\r\n            )\r\n        }\r\n        handleClose()\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Button variant=\"primary\" onClick={handleShow}>\r\n                Edit\r\n            </Button>\r\n            <Modal show={show} onHide={handleClose} centered>\r\n                <Form\r\n                    onSubmit={(e) => {\r\n                        onFormSubmit(e)\r\n                    }}\r\n                >\r\n                    <Modal.Header closeButton>\r\n                        <Modal.Title>{title}</Modal.Title>\r\n                    </Modal.Header>\r\n                    <Modal.Body>\r\n                        <Form.Group\r\n                            controlId=\"formFile\"\r\n                            className=\"mb-3\"\r\n                            onChange={(e) => {\r\n                                imageUpload(e)\r\n                            }}\r\n                        >\r\n                            <Form.Label>Profile</Form.Label>\r\n                            <Form.Control type=\"file\" />\r\n                        </Form.Group>\r\n                        <Form.Group className=\"mb-3\" controlId=\"formBasicName\">\r\n                            <Form.Label>Name</Form.Label>\r\n                            <Form.Control\r\n                                type=\"text\"\r\n                                placeholder=\"Enter Name\"\r\n                                onChange={(e) =>\r\n                                    setForm({\r\n                                        ...form,\r\n                                        name: e.target.value,\r\n                                    })\r\n                                }\r\n                            />\r\n                        </Form.Group>\r\n\r\n                        <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\r\n                            <Form.Label>Email address</Form.Label>\r\n                            <Form.Control\r\n                                type=\"email\"\r\n                                placeholder=\"Enter email\"\r\n                                onChange={(e) =>\r\n                                    setForm({\r\n                                        ...form,\r\n                                        email: e.target.value,\r\n                                    })\r\n                                }\r\n                            />\r\n                        </Form.Group>\r\n\r\n                        <Form.Group className=\"mb-3\" controlId=\"formBasicPhone\">\r\n                            <Form.Label>Phone Number</Form.Label>\r\n                            <Form.Control\r\n                                type=\"tel\"\r\n                                placeholder=\"Enter phone number\"\r\n                                onChange={(e) =>\r\n                                    setForm({\r\n                                        ...form,\r\n                                        phone: e.target.value,\r\n                                    })\r\n                                }\r\n                            />\r\n                        </Form.Group>\r\n                    </Modal.Body>\r\n                    <Modal.Footer>\r\n                        <Button variant=\"secondary\" onClick={handleClose}>\r\n                            Close\r\n                        </Button>\r\n                        <Button type=\"submit\" variant=\"primary\">\r\n                            Save Changes\r\n                        </Button>\r\n                    </Modal.Footer>\r\n                </Form>\r\n            </Modal>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default EditModal\r\n"]},"metadata":{},"sourceType":"module"}