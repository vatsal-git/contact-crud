{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\dell\\\\Desktop\\\\vatsal-patel\\\\contact-crud\\\\contact-crud\\\\src\\\\pages\\\\SignIn.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { Form, Button, Alert } from 'react-bootstrap';\nimport { useNavigate } from 'react-router-dom';\nimport { AuthConsumer } from '../helper/AuthContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction SignIn() {\n  _s();\n\n  const navigate = useNavigate();\n  const error = document.getElementsByClassName('error');\n  const [form, setForm] = useState({\n    email: '',\n    password: ''\n  });\n  const [doValid, setDoValid] = useState(false);\n\n  const onFormSubmit = (event, login) => {\n    event.preventDefault();\n    setDoValid(true);\n    const users = JSON.parse(localStorage.getItem('users'));\n\n    if (validate()) {\n      if (!users) {\n        error[0].textContent = '*New user, Please SignUp';\n      } else if (isUserValid(users)) {\n        login(form);\n        navigate('/home');\n      }\n    }\n  }; // HELPER\n\n\n  const validate = () => {\n    error[1].textContent = form.email.match( // eslint-disable-next-line no-useless-escape\n    /^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/) ? '' : '*Invalid Email';\n    return error[1].textContent === '';\n  };\n\n  const isUserValid = users => {\n    let count1 = 0,\n        count2 = 0;\n    users.forEach(user => {\n      if (user.email === form.email) {\n        count1++;\n\n        if (user.password === form.password) {\n          count2++;\n          error[2].textContent = '';\n          form.uuid = user.uuid;\n        } else {\n          error[2].textContent = '*Wrong password';\n          error[0].textContent = '';\n        }\n      }\n    });\n\n    if (count1 === 0) {\n      error[2].textContent = '';\n      error[0].textContent = '*New user, Please SignUp';\n      return false;\n    } else if (count2 === 0) {\n      return false;\n    } else {\n      return true;\n    }\n  }; //HELPER END\n\n\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    id: \"signin\",\n    className: \"center-my-child\",\n    children: /*#__PURE__*/_jsxDEV(AuthConsumer, {\n      children: _ref => {\n        let {\n          login\n        } = _ref;\n        return (\n          /*#__PURE__*/\n          // <form\n          //     name=\"signupForm\"\n          //     onSubmit={(event) => onFormSubmit(event, login)}\n          // >\n          //     <header>SignIn</header>\n          //     <p className=\"error\"></p>\n          //     <div className=\"input-field-wrapper\">\n          //         <div className=\"input-field\">\n          //             <label htmlFor=\"email\">Email</label>\n          //             <br />\n          //             <input\n          //                 type=\"email\"\n          //                 name=\"email\"\n          //                 className=\"email\"\n          //                 onChange={(e) => {\n          //                     setForm({\n          //                         ...form,\n          //                         email: e.target.value,\n          //                     })\n          //                     if (doValid) validate()\n          //                 }}\n          //             />\n          //             <p className=\"error\"></p>\n          //         </div>\n          //         <div className=\"input-field\">\n          //             <label htmlFor=\"password\">Password</label>\n          //             <br />\n          //             <input\n          //                 type=\"password\"\n          //                 name=\"password\"\n          //                 className=\"password\"\n          //                 onChange={(e) =>\n          //                     setForm({\n          //                         ...form,\n          //                         password: e.target.value,\n          //                     })\n          //                 }\n          //             />\n          //             <p className=\"error\"></p>\n          //         </div>\n          //     </div>\n          //     <div className=\"btn-wrapper\">\n          //         <button\n          //             type=\"submit\"\n          //             id=\"signin-btn\"\n          //             className=\"btn\"\n          //         >\n          //             GO\n          //         </button>\n          //     </div>\n          //     <p className=\"or-link\">\n          //         or <br />\n          //         <Link to=\"/signup\">SignUp</Link>\n          //     </p>\n          // </form>\n          _jsxDEV(Form, {\n            children: [/*#__PURE__*/_jsxDEV(Alert.Heading, {\n              children: \"SignIn\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 131,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n              className: \"mb-3\",\n              controlId: \"formBasicEmail\",\n              children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                children: \"Email address\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 133,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                type: \"email\",\n                placeholder: \"Enter email\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 134,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(Form.Text, {\n                className: \"text-muted\",\n                children: \"We'll never share your email with anyone else.\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 138,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 132,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n              className: \"mb-3\",\n              controlId: \"formBasicPassword\",\n              children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                children: \"Password\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 147,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                type: \"password\",\n                placeholder: \"Password\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 148,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 143,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n              className: \"mb-3\",\n              controlId: \"formBasicCheckbox\",\n              children: /*#__PURE__*/_jsxDEV(Form.Check, {\n                type: \"checkbox\",\n                label: \"Check me out\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 157,\n                columnNumber: 29\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 153,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"primary\",\n              type: \"submit\",\n              children: \"Submit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 159,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 21\n          }, this)\n        );\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 9\n  }, this);\n}\n\n_s(SignIn, \"L1nt+RTg1qr8OgaJyM1LuLdpukY=\", false, function () {\n  return [useNavigate];\n});\n\n_c = SignIn;\nexport default SignIn;\n\nvar _c;\n\n$RefreshReg$(_c, \"SignIn\");","map":{"version":3,"sources":["C:/Users/dell/Desktop/vatsal-patel/contact-crud/contact-crud/src/pages/SignIn.js"],"names":["React","useState","Form","Button","Alert","useNavigate","AuthConsumer","SignIn","navigate","error","document","getElementsByClassName","form","setForm","email","password","doValid","setDoValid","onFormSubmit","event","login","preventDefault","users","JSON","parse","localStorage","getItem","validate","textContent","isUserValid","match","count1","count2","forEach","user","uuid"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\nimport { Form, Button, Alert } from 'react-bootstrap'\nimport { useNavigate } from 'react-router-dom'\nimport { AuthConsumer } from '../helper/AuthContext'\n\nfunction SignIn() {\n    const navigate = useNavigate()\n    const error = document.getElementsByClassName('error')\n    const [form, setForm] = useState({ email: '', password: '' })\n    const [doValid, setDoValid] = useState(false)\n\n    const onFormSubmit = (event, login) => {\n        event.preventDefault()\n        setDoValid(true)\n        const users = JSON.parse(localStorage.getItem('users'))\n\n        if (validate()) {\n            if (!users) {\n                error[0].textContent = '*New user, Please SignUp'\n            } else if (isUserValid(users)) {\n                login(form)\n                navigate('/home')\n            }\n        }\n    }\n\n    // HELPER\n\n    const validate = () => {\n        error[1].textContent = form.email.match(\n            // eslint-disable-next-line no-useless-escape\n            /^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/\n        )\n            ? ''\n            : '*Invalid Email'\n\n        return error[1].textContent === ''\n    }\n\n    const isUserValid = (users) => {\n        let count1 = 0,\n            count2 = 0\n        users.forEach((user) => {\n            if (user.email === form.email) {\n                count1++\n                if (user.password === form.password) {\n                    count2++\n                    error[2].textContent = ''\n                    form.uuid = user.uuid\n                } else {\n                    error[2].textContent = '*Wrong password'\n                    error[0].textContent = ''\n                }\n            }\n        })\n\n        if (count1 === 0) {\n            error[2].textContent = ''\n            error[0].textContent = '*New user, Please SignUp'\n            return false\n        } else if (count2 === 0) {\n            return false\n        } else {\n            return true\n        }\n    }\n\n    //HELPER END\n\n    return (\n        <section id=\"signin\" className=\"center-my-child\">\n            <AuthConsumer>\n                {({ login }) => (\n                    // <form\n                    //     name=\"signupForm\"\n                    //     onSubmit={(event) => onFormSubmit(event, login)}\n                    // >\n                    //     <header>SignIn</header>\n                    //     <p className=\"error\"></p>\n                    //     <div className=\"input-field-wrapper\">\n                    //         <div className=\"input-field\">\n                    //             <label htmlFor=\"email\">Email</label>\n                    //             <br />\n                    //             <input\n                    //                 type=\"email\"\n                    //                 name=\"email\"\n                    //                 className=\"email\"\n                    //                 onChange={(e) => {\n                    //                     setForm({\n                    //                         ...form,\n                    //                         email: e.target.value,\n                    //                     })\n                    //                     if (doValid) validate()\n                    //                 }}\n                    //             />\n                    //             <p className=\"error\"></p>\n                    //         </div>\n                    //         <div className=\"input-field\">\n                    //             <label htmlFor=\"password\">Password</label>\n                    //             <br />\n                    //             <input\n                    //                 type=\"password\"\n                    //                 name=\"password\"\n                    //                 className=\"password\"\n                    //                 onChange={(e) =>\n                    //                     setForm({\n                    //                         ...form,\n                    //                         password: e.target.value,\n                    //                     })\n                    //                 }\n                    //             />\n                    //             <p className=\"error\"></p>\n                    //         </div>\n                    //     </div>\n                    //     <div className=\"btn-wrapper\">\n                    //         <button\n                    //             type=\"submit\"\n                    //             id=\"signin-btn\"\n                    //             className=\"btn\"\n                    //         >\n                    //             GO\n                    //         </button>\n                    //     </div>\n                    //     <p className=\"or-link\">\n                    //         or <br />\n                    //         <Link to=\"/signup\">SignUp</Link>\n                    //     </p>\n                    // </form>\n\n                    <Form>\n                        <Alert.Heading>SignIn</Alert.Heading>\n                        <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\n                            <Form.Label>Email address</Form.Label>\n                            <Form.Control\n                                type=\"email\"\n                                placeholder=\"Enter email\"\n                            />\n                            <Form.Text className=\"text-muted\">\n                                We'll never share your email with anyone else.\n                            </Form.Text>\n                        </Form.Group>\n\n                        <Form.Group\n                            className=\"mb-3\"\n                            controlId=\"formBasicPassword\"\n                        >\n                            <Form.Label>Password</Form.Label>\n                            <Form.Control\n                                type=\"password\"\n                                placeholder=\"Password\"\n                            />\n                        </Form.Group>\n                        <Form.Group\n                            className=\"mb-3\"\n                            controlId=\"formBasicCheckbox\"\n                        >\n                            <Form.Check type=\"checkbox\" label=\"Check me out\" />\n                        </Form.Group>\n                        <Button variant=\"primary\" type=\"submit\">\n                            Submit\n                        </Button>\n                    </Form>\n                )}\n            </AuthConsumer>\n        </section>\n    )\n}\n\nexport default SignIn\n"]},"metadata":{},"sourceType":"module"}