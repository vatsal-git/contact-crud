{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\dell\\\\Desktop\\\\vatsal-patel\\\\contact-crud\\\\contact-crud\\\\src\\\\components\\\\FormModal.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { Button, Form, Modal } from 'react-bootstrap';\nimport { validateEmail, validatePhone, validateProfile } from '../helper/HelperFunctions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction FormModal(_ref) {\n  _s();\n\n  let {\n    title,\n    buttonName,\n    btnClassName,\n    initialFormValues,\n    updateContacts,\n    contactIndex\n  } = _ref;\n  const [show, setShow] = useState(false);\n  const [form, setForm] = useState(initialFormValues);\n  const error = document.getElementsByClassName('error');\n\n  const handleClose = () => setShow(false);\n\n  const handleShow = () => {\n    setForm(initialFormValues);\n    setShow(true);\n  };\n\n  const imageUpload = e => {\n    const file = e.target.files[0];\n    error[0].textContent = validateProfile(file);\n    getBase64(file).then(base64 => {\n      setForm({ ...form,\n        profile: base64\n      });\n    });\n  };\n\n  const getBase64 = file => {\n    return new Promise((resolve, reject) => {\n      const reader = new FileReader();\n\n      reader.onload = () => resolve(reader.result);\n\n      reader.onerror = error => reject(error);\n\n      reader.readAsDataURL(file);\n    });\n  };\n\n  const onFormSubmit = e => {\n    e.preventDefault();\n\n    if (validate()) {\n      const userContacts = JSON.parse(localStorage.getItem('userContacts'));\n\n      if (!userContacts) {\n        localStorage.setItem('userContacts', JSON.stringify([form]));\n      } else {\n        userContacts.splice(contactIndex, 1, form);\n        localStorage.setItem('userContacts', JSON.stringify(userContacts));\n        updateContacts();\n      }\n\n      updateContacts();\n      handleClose();\n    }\n  };\n\n  const validate = () => {\n    console.log(error);\n    error[2].textContent = validateEmail(form.email);\n    error[3].textContent = validatePhone(form.phone);\n    error[0].textContent === '' && error[2].textContent === '' && error[3].textContent === '' ? setCanSubmit(true) : setCanSubmit(false);\n    console.log(canSubmit, error[0].textContent, error[2].textContent, error[3].textContent);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: btnClassName.wrapper,\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        className: btnClassName.element,\n        variant: \"primary\",\n        onClick: handleShow,\n        children: buttonName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      show: show,\n      onHide: handleClose,\n      centered: true,\n      children: /*#__PURE__*/_jsxDEV(Form, {\n        onSubmit: onFormSubmit,\n        children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n          closeButton: true,\n          children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n            children: title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n          children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n            controlId: \"formFile\",\n            className: \"mb-3\",\n            onChange: e => {\n              imageUpload(e);\n            },\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Profile\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 113,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"file\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 114,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Form.Text, {\n              className: \"error\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 115,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            className: \"mb-3\",\n            controlId: \"formBasicName\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 119,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"text\",\n              placeholder: \"Enter Name\",\n              onChange: e => setForm({ ...form,\n                name: e.target.value\n              }),\n              value: form.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 120,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Form.Text, {\n              className: \"error\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 131,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            className: \"mb-3\",\n            controlId: \"formBasicEmail\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Email address\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 135,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"email\",\n              placeholder: \"Enter email\",\n              onChange: e => setForm({ ...form,\n                email: e.target.value\n              }),\n              value: form.email\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 136,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Form.Text, {\n              className: \"error\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 147,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            className: \"mb-3\",\n            controlId: \"formBasicPhone\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Phone Number\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 151,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"tel\",\n              placeholder: \"Enter phone number\",\n              onChange: e => setForm({ ...form,\n                phone: e.target.value\n              }),\n              value: form.phone\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 152,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Form.Text, {\n              className: \"error\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 163,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 150,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Modal.Footer, {\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            variant: \"secondary\",\n            onClick: handleClose,\n            children: \"Close\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 167,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            type: \"submit\",\n            variant: \"primary\",\n            children: \"Save Changes\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 170,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n\n_s(FormModal, \"/8R8e2fDvR5oUbhggXU1CbXCboc=\");\n\n_c = FormModal;\nexport default FormModal;\n\nvar _c;\n\n$RefreshReg$(_c, \"FormModal\");","map":{"version":3,"sources":["C:/Users/dell/Desktop/vatsal-patel/contact-crud/contact-crud/src/components/FormModal.js"],"names":["React","useState","Button","Form","Modal","validateEmail","validatePhone","validateProfile","FormModal","title","buttonName","btnClassName","initialFormValues","updateContacts","contactIndex","show","setShow","form","setForm","error","document","getElementsByClassName","handleClose","handleShow","imageUpload","e","file","target","files","textContent","getBase64","then","base64","profile","Promise","resolve","reject","reader","FileReader","onload","result","onerror","readAsDataURL","onFormSubmit","preventDefault","validate","userContacts","JSON","parse","localStorage","getItem","setItem","stringify","splice","console","log","email","phone","setCanSubmit","canSubmit","wrapper","element","name","value"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,MAAT,EAAiBC,IAAjB,EAAuBC,KAAvB,QAAoC,iBAApC;AACA,SACIC,aADJ,EAEIC,aAFJ,EAGIC,eAHJ,QAIO,2BAJP;;;;AAMA,SAASC,SAAT,OAOG;AAAA;;AAAA,MAPgB;AACfC,IAAAA,KADe;AAEfC,IAAAA,UAFe;AAGfC,IAAAA,YAHe;AAIfC,IAAAA,iBAJe;AAKfC,IAAAA,cALe;AAMfC,IAAAA;AANe,GAOhB;AACC,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBf,QAAQ,CAAC,KAAD,CAAhC;AACA,QAAM,CAACgB,IAAD,EAAOC,OAAP,IAAkBjB,QAAQ,CAACW,iBAAD,CAAhC;AAEA,QAAMO,KAAK,GAAGC,QAAQ,CAACC,sBAAT,CAAgC,OAAhC,CAAd;;AAEA,QAAMC,WAAW,GAAG,MAAMN,OAAO,CAAC,KAAD,CAAjC;;AACA,QAAMO,UAAU,GAAG,MAAM;AACrBL,IAAAA,OAAO,CAACN,iBAAD,CAAP;AACAI,IAAAA,OAAO,CAAC,IAAD,CAAP;AACH,GAHD;;AAKA,QAAMQ,WAAW,GAAIC,CAAD,IAAO;AACvB,UAAMC,IAAI,GAAGD,CAAC,CAACE,MAAF,CAASC,KAAT,CAAe,CAAf,CAAb;AAEAT,IAAAA,KAAK,CAAC,CAAD,CAAL,CAASU,WAAT,GAAuBtB,eAAe,CAACmB,IAAD,CAAtC;AAEAI,IAAAA,SAAS,CAACJ,IAAD,CAAT,CAAgBK,IAAhB,CAAsBC,MAAD,IAAY;AAC7Bd,MAAAA,OAAO,CAAC,EAAE,GAAGD,IAAL;AAAWgB,QAAAA,OAAO,EAAED;AAApB,OAAD,CAAP;AACH,KAFD;AAGH,GARD;;AASA,QAAMF,SAAS,GAAIJ,IAAD,IAAU;AACxB,WAAO,IAAIQ,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;AACpC,YAAMC,MAAM,GAAG,IAAIC,UAAJ,EAAf;;AACAD,MAAAA,MAAM,CAACE,MAAP,GAAgB,MAAMJ,OAAO,CAACE,MAAM,CAACG,MAAR,CAA7B;;AACAH,MAAAA,MAAM,CAACI,OAAP,GAAkBtB,KAAD,IAAWiB,MAAM,CAACjB,KAAD,CAAlC;;AACAkB,MAAAA,MAAM,CAACK,aAAP,CAAqBhB,IAArB;AACH,KALM,CAAP;AAMH,GAPD;;AASA,QAAMiB,YAAY,GAAIlB,CAAD,IAAO;AACxBA,IAAAA,CAAC,CAACmB,cAAF;;AAEA,QAAIC,QAAQ,EAAZ,EAAgB;AACZ,YAAMC,YAAY,GAAGC,IAAI,CAACC,KAAL,CACjBC,YAAY,CAACC,OAAb,CAAqB,cAArB,CADiB,CAArB;;AAIA,UAAI,CAACJ,YAAL,EAAmB;AACfG,QAAAA,YAAY,CAACE,OAAb,CAAqB,cAArB,EAAqCJ,IAAI,CAACK,SAAL,CAAe,CAACnC,IAAD,CAAf,CAArC;AACH,OAFD,MAEO;AACH6B,QAAAA,YAAY,CAACO,MAAb,CAAoBvC,YAApB,EAAkC,CAAlC,EAAqCG,IAArC;AACAgC,QAAAA,YAAY,CAACE,OAAb,CACI,cADJ,EAEIJ,IAAI,CAACK,SAAL,CAAeN,YAAf,CAFJ;AAIAjC,QAAAA,cAAc;AACjB;;AACDA,MAAAA,cAAc;AACdS,MAAAA,WAAW;AACd;AACJ,GArBD;;AAuBA,QAAMuB,QAAQ,GAAG,MAAM;AACnBS,IAAAA,OAAO,CAACC,GAAR,CAAYpC,KAAZ;AACAA,IAAAA,KAAK,CAAC,CAAD,CAAL,CAASU,WAAT,GAAuBxB,aAAa,CAACY,IAAI,CAACuC,KAAN,CAApC;AACArC,IAAAA,KAAK,CAAC,CAAD,CAAL,CAASU,WAAT,GAAuBvB,aAAa,CAACW,IAAI,CAACwC,KAAN,CAApC;AAEAtC,IAAAA,KAAK,CAAC,CAAD,CAAL,CAASU,WAAT,KAAyB,EAAzB,IACAV,KAAK,CAAC,CAAD,CAAL,CAASU,WAAT,KAAyB,EADzB,IAEAV,KAAK,CAAC,CAAD,CAAL,CAASU,WAAT,KAAyB,EAFzB,GAGM6B,YAAY,CAAC,IAAD,CAHlB,GAIMA,YAAY,CAAC,KAAD,CAJlB;AAMAJ,IAAAA,OAAO,CAACC,GAAR,CACII,SADJ,EAEIxC,KAAK,CAAC,CAAD,CAAL,CAASU,WAFb,EAGIV,KAAK,CAAC,CAAD,CAAL,CAASU,WAHb,EAIIV,KAAK,CAAC,CAAD,CAAL,CAASU,WAJb;AAMH,GAjBD;;AAmBA,sBACI;AAAA,4BACI;AAAK,MAAA,SAAS,EAAElB,YAAY,CAACiD,OAA7B;AAAA,6BACI,QAAC,MAAD;AACI,QAAA,SAAS,EAAEjD,YAAY,CAACkD,OAD5B;AAEI,QAAA,OAAO,EAAC,SAFZ;AAGI,QAAA,OAAO,EAAEtC,UAHb;AAAA,kBAKKb;AALL;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADJ,eAWI,QAAC,KAAD;AAAO,MAAA,IAAI,EAAEK,IAAb;AAAmB,MAAA,MAAM,EAAEO,WAA3B;AAAwC,MAAA,QAAQ,MAAhD;AAAA,6BACI,QAAC,IAAD;AAAM,QAAA,QAAQ,EAAEqB,YAAhB;AAAA,gCACI,QAAC,KAAD,CAAO,MAAP;AAAc,UAAA,WAAW,MAAzB;AAAA,iCACI,QAAC,KAAD,CAAO,KAAP;AAAA,sBAAclC;AAAd;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBADJ,eAII,QAAC,KAAD,CAAO,IAAP;AAAA,kCACI,QAAC,IAAD,CAAM,KAAN;AACI,YAAA,SAAS,EAAC,UADd;AAEI,YAAA,SAAS,EAAC,MAFd;AAGI,YAAA,QAAQ,EAAGgB,CAAD,IAAO;AACbD,cAAAA,WAAW,CAACC,CAAD,CAAX;AACH,aALL;AAAA,oCAOI,QAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAPJ,eAQI,QAAC,IAAD,CAAM,OAAN;AAAc,cAAA,IAAI,EAAC;AAAnB;AAAA;AAAA;AAAA;AAAA,oBARJ,eASI,QAAC,IAAD,CAAM,IAAN;AAAW,cAAA,SAAS,EAAC;AAArB;AAAA;AAAA;AAAA;AAAA,oBATJ;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,eAaI,QAAC,IAAD,CAAM,KAAN;AAAY,YAAA,SAAS,EAAC,MAAtB;AAA6B,YAAA,SAAS,EAAC,eAAvC;AAAA,oCACI,QAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADJ,eAEI,QAAC,IAAD,CAAM,OAAN;AACI,cAAA,IAAI,EAAC,MADT;AAEI,cAAA,WAAW,EAAC,YAFhB;AAGI,cAAA,QAAQ,EAAGA,CAAD,IACNP,OAAO,CAAC,EACJ,GAAGD,IADC;AAEJ6C,gBAAAA,IAAI,EAAErC,CAAC,CAACE,MAAF,CAASoC;AAFX,eAAD,CAJf;AASI,cAAA,KAAK,EAAE9C,IAAI,CAAC6C;AAThB;AAAA;AAAA;AAAA;AAAA,oBAFJ,eAaI,QAAC,IAAD,CAAM,IAAN;AAAW,cAAA,SAAS,EAAC;AAArB;AAAA;AAAA;AAAA;AAAA,oBAbJ;AAAA;AAAA;AAAA;AAAA;AAAA,kBAbJ,eA6BI,QAAC,IAAD,CAAM,KAAN;AAAY,YAAA,SAAS,EAAC,MAAtB;AAA6B,YAAA,SAAS,EAAC,gBAAvC;AAAA,oCACI,QAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADJ,eAEI,QAAC,IAAD,CAAM,OAAN;AACI,cAAA,IAAI,EAAC,OADT;AAEI,cAAA,WAAW,EAAC,aAFhB;AAGI,cAAA,QAAQ,EAAGrC,CAAD,IACNP,OAAO,CAAC,EACJ,GAAGD,IADC;AAEJuC,gBAAAA,KAAK,EAAE/B,CAAC,CAACE,MAAF,CAASoC;AAFZ,eAAD,CAJf;AASI,cAAA,KAAK,EAAE9C,IAAI,CAACuC;AAThB;AAAA;AAAA;AAAA;AAAA,oBAFJ,eAaI,QAAC,IAAD,CAAM,IAAN;AAAW,cAAA,SAAS,EAAC;AAArB;AAAA;AAAA;AAAA;AAAA,oBAbJ;AAAA;AAAA;AAAA;AAAA;AAAA,kBA7BJ,eA6CI,QAAC,IAAD,CAAM,KAAN;AAAY,YAAA,SAAS,EAAC,MAAtB;AAA6B,YAAA,SAAS,EAAC,gBAAvC;AAAA,oCACI,QAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADJ,eAEI,QAAC,IAAD,CAAM,OAAN;AACI,cAAA,IAAI,EAAC,KADT;AAEI,cAAA,WAAW,EAAC,oBAFhB;AAGI,cAAA,QAAQ,EAAG/B,CAAD,IACNP,OAAO,CAAC,EACJ,GAAGD,IADC;AAEJwC,gBAAAA,KAAK,EAAEhC,CAAC,CAACE,MAAF,CAASoC;AAFZ,eAAD,CAJf;AASI,cAAA,KAAK,EAAE9C,IAAI,CAACwC;AAThB;AAAA;AAAA;AAAA;AAAA,oBAFJ,eAaI,QAAC,IAAD,CAAM,IAAN;AAAW,cAAA,SAAS,EAAC;AAArB;AAAA;AAAA;AAAA;AAAA,oBAbJ;AAAA;AAAA;AAAA;AAAA;AAAA,kBA7CJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBAJJ,eAiEI,QAAC,KAAD,CAAO,MAAP;AAAA,kCACI,QAAC,MAAD;AAAQ,YAAA,OAAO,EAAC,WAAhB;AAA4B,YAAA,OAAO,EAAEnC,WAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,eAII,QAAC,MAAD;AAAQ,YAAA,IAAI,EAAC,QAAb;AAAsB,YAAA,OAAO,EAAC,SAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBAjEJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YAXJ;AAAA,kBADJ;AA0FH;;GAzKQd,S;;KAAAA,S;AA2KT,eAAeA,SAAf","sourcesContent":["import React, { useState } from 'react'\r\nimport { Button, Form, Modal } from 'react-bootstrap'\r\nimport {\r\n    validateEmail,\r\n    validatePhone,\r\n    validateProfile,\r\n} from '../helper/HelperFunctions'\r\n\r\nfunction FormModal({\r\n    title,\r\n    buttonName,\r\n    btnClassName,\r\n    initialFormValues,\r\n    updateContacts,\r\n    contactIndex,\r\n}) {\r\n    const [show, setShow] = useState(false)\r\n    const [form, setForm] = useState(initialFormValues)\r\n\r\n    const error = document.getElementsByClassName('error')\r\n\r\n    const handleClose = () => setShow(false)\r\n    const handleShow = () => {\r\n        setForm(initialFormValues)\r\n        setShow(true)\r\n    }\r\n\r\n    const imageUpload = (e) => {\r\n        const file = e.target.files[0]\r\n\r\n        error[0].textContent = validateProfile(file)\r\n\r\n        getBase64(file).then((base64) => {\r\n            setForm({ ...form, profile: base64 })\r\n        })\r\n    }\r\n    const getBase64 = (file) => {\r\n        return new Promise((resolve, reject) => {\r\n            const reader = new FileReader()\r\n            reader.onload = () => resolve(reader.result)\r\n            reader.onerror = (error) => reject(error)\r\n            reader.readAsDataURL(file)\r\n        })\r\n    }\r\n\r\n    const onFormSubmit = (e) => {\r\n        e.preventDefault()\r\n\r\n        if (validate()) {\r\n            const userContacts = JSON.parse(\r\n                localStorage.getItem('userContacts')\r\n            )\r\n\r\n            if (!userContacts) {\r\n                localStorage.setItem('userContacts', JSON.stringify([form]))\r\n            } else {\r\n                userContacts.splice(contactIndex, 1, form)\r\n                localStorage.setItem(\r\n                    'userContacts',\r\n                    JSON.stringify(userContacts)\r\n                )\r\n                updateContacts()\r\n            }\r\n            updateContacts()\r\n            handleClose()\r\n        }\r\n    }\r\n\r\n    const validate = () => {\r\n        console.log(error)\r\n        error[2].textContent = validateEmail(form.email)\r\n        error[3].textContent = validatePhone(form.phone)\r\n\r\n        error[0].textContent === '' &&\r\n        error[2].textContent === '' &&\r\n        error[3].textContent === ''\r\n            ? setCanSubmit(true)\r\n            : setCanSubmit(false)\r\n\r\n        console.log(\r\n            canSubmit,\r\n            error[0].textContent,\r\n            error[2].textContent,\r\n            error[3].textContent\r\n        )\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className={btnClassName.wrapper}>\r\n                <Button\r\n                    className={btnClassName.element}\r\n                    variant=\"primary\"\r\n                    onClick={handleShow}\r\n                >\r\n                    {buttonName}\r\n                </Button>\r\n            </div>\r\n\r\n            <Modal show={show} onHide={handleClose} centered>\r\n                <Form onSubmit={onFormSubmit}>\r\n                    <Modal.Header closeButton>\r\n                        <Modal.Title>{title}</Modal.Title>\r\n                    </Modal.Header>\r\n                    <Modal.Body>\r\n                        <Form.Group\r\n                            controlId=\"formFile\"\r\n                            className=\"mb-3\"\r\n                            onChange={(e) => {\r\n                                imageUpload(e)\r\n                            }}\r\n                        >\r\n                            <Form.Label>Profile</Form.Label>\r\n                            <Form.Control type=\"file\" />\r\n                            <Form.Text className=\"error\"></Form.Text>\r\n                        </Form.Group>\r\n\r\n                        <Form.Group className=\"mb-3\" controlId=\"formBasicName\">\r\n                            <Form.Label>Name</Form.Label>\r\n                            <Form.Control\r\n                                type=\"text\"\r\n                                placeholder=\"Enter Name\"\r\n                                onChange={(e) =>\r\n                                    setForm({\r\n                                        ...form,\r\n                                        name: e.target.value,\r\n                                    })\r\n                                }\r\n                                value={form.name}\r\n                            />\r\n                            <Form.Text className=\"error\"></Form.Text>\r\n                        </Form.Group>\r\n\r\n                        <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\r\n                            <Form.Label>Email address</Form.Label>\r\n                            <Form.Control\r\n                                type=\"email\"\r\n                                placeholder=\"Enter email\"\r\n                                onChange={(e) =>\r\n                                    setForm({\r\n                                        ...form,\r\n                                        email: e.target.value,\r\n                                    })\r\n                                }\r\n                                value={form.email}\r\n                            />\r\n                            <Form.Text className=\"error\"></Form.Text>\r\n                        </Form.Group>\r\n\r\n                        <Form.Group className=\"mb-3\" controlId=\"formBasicPhone\">\r\n                            <Form.Label>Phone Number</Form.Label>\r\n                            <Form.Control\r\n                                type=\"tel\"\r\n                                placeholder=\"Enter phone number\"\r\n                                onChange={(e) =>\r\n                                    setForm({\r\n                                        ...form,\r\n                                        phone: e.target.value,\r\n                                    })\r\n                                }\r\n                                value={form.phone}\r\n                            />\r\n                            <Form.Text className=\"error\"></Form.Text>\r\n                        </Form.Group>\r\n                    </Modal.Body>\r\n                    <Modal.Footer>\r\n                        <Button variant=\"secondary\" onClick={handleClose}>\r\n                            Close\r\n                        </Button>\r\n                        <Button type=\"submit\" variant=\"primary\">\r\n                            Save Changes\r\n                        </Button>\r\n                    </Modal.Footer>\r\n                </Form>\r\n            </Modal>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default FormModal\r\n"]},"metadata":{},"sourceType":"module"}