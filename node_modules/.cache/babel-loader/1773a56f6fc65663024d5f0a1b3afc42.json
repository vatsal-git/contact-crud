{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\dell\\\\Desktop\\\\vatsal-patel\\\\contact-crud\\\\contact-crud\\\\src\\\\pages\\\\SignIn.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { Link, useNavigate } from 'react-router-dom';\nimport { AuthConsumer } from '../helper/AuthContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction SignIn() {\n  _s();\n\n  const navigate = useNavigate();\n  const error = document.getElementsByClassName('error');\n  const [form, setForm] = useState({\n    email: '',\n    password: ''\n  });\n\n  const onSignIn = (event, login) => {\n    event.preventDefault();\n    const users = JSON.parse(localStorage.getItem('users'));\n\n    if (validate(form)) {\n      if (!users) {\n        error[0].textContent = '*Please SignUp';\n      } else if (isUserValid(users)) {\n        login();\n        navigate('/home');\n      }\n    }\n  }; // HELPER\n\n\n  const validate = () => {\n    console.log(form.email);\n    error[1].textContent = form.email.match(/^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/) ? '' : '*Invalid Email';\n    return error[1] === '';\n  };\n\n  const isUserValid = users => {\n    let count = 0;\n    users.forEach(user => {\n      if (user.email === form.email) {\n        if (user.password === form.password) {\n          error[0] = '';\n          count++;\n        } else {\n          error[2].textContent = '*Wrong password';\n        }\n      }\n    });\n\n    if (count === 0) {\n      error[0].textContent = '*New user, Please SignUp';\n    } else {\n      return true;\n    }\n  }; //HELPER END\n\n\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    id: \"signin\",\n    className: \"center-my-child\",\n    children: /*#__PURE__*/_jsxDEV(AuthConsumer, {\n      children: _ref => {\n        let {\n          login\n        } = _ref;\n        return /*#__PURE__*/_jsxDEV(\"form\", {\n          name: \"signupForm\",\n          onSubmit: event => onSignIn(event, login),\n          children: [/*#__PURE__*/_jsxDEV(\"header\", {\n            children: \"SignIn\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"error\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"input-field-wrapper\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"input-field\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"email\",\n                children: \"Email\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 71,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 72,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"email\",\n                name: \"email\",\n                className: \"email\",\n                onChange: e => {\n                  console.log(e.target.value);\n                  setForm({\n                    email: e.target.value\n                  });\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 73,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"error\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 82,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"input-field\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"password\",\n                children: \"Password\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 85,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 86,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"password\",\n                name: \"password\",\n                className: \"password\",\n                onChange: e => setForm({\n                  password: e.target.value\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 87,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"error\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 95,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 84,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"btn-wrapper\",\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"submit\",\n              id: \"signin-btn\",\n              className: \"btn\",\n              children: \"GO\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 99,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"or-link\",\n            children: [\"or \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 108,\n              columnNumber: 32\n            }, this), /*#__PURE__*/_jsxDEV(Link, {\n              to: \"/\",\n              children: \"SignUp\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 109,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 21\n        }, this);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 9\n  }, this);\n}\n\n_s(SignIn, \"pDKKmQEomKZlG4soskNrj4IBBcw=\", false, function () {\n  return [useNavigate];\n});\n\n_c = SignIn;\nexport default SignIn;\n\nvar _c;\n\n$RefreshReg$(_c, \"SignIn\");","map":{"version":3,"sources":["C:/Users/dell/Desktop/vatsal-patel/contact-crud/contact-crud/src/pages/SignIn.js"],"names":["React","useState","Link","useNavigate","AuthConsumer","SignIn","navigate","error","document","getElementsByClassName","form","setForm","email","password","onSignIn","event","login","preventDefault","users","JSON","parse","localStorage","getItem","validate","textContent","isUserValid","console","log","match","count","forEach","user","e","target","value"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\nimport { Link, useNavigate } from 'react-router-dom'\nimport { AuthConsumer } from '../helper/AuthContext'\n\nfunction SignIn() {\n    const navigate = useNavigate()\n    const error = document.getElementsByClassName('error')\n    const [form, setForm] = useState({ email: '', password: '' })\n\n    const onSignIn = (event, login) => {\n        event.preventDefault()\n        const users = JSON.parse(localStorage.getItem('users'))\n\n        if (validate(form)) {\n            if (!users) {\n                error[0].textContent = '*Please SignUp'\n            } else if (isUserValid(users)) {\n                login()\n                navigate('/home')\n            }\n        }\n    }\n\n    // HELPER\n\n    const validate = () => {\n        console.log(form.email)\n        error[1].textContent = form.email.match(\n            /^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/\n        )\n            ? ''\n            : '*Invalid Email'\n\n        return error[1] === ''\n    }\n\n    const isUserValid = (users) => {\n        let count = 0\n        users.forEach((user) => {\n            if (user.email === form.email) {\n                if (user.password === form.password) {\n                    error[0] = ''\n                    count++\n                } else {\n                    error[2].textContent = '*Wrong password'\n                }\n            }\n        })\n\n        if (count === 0) {\n            error[0].textContent = '*New user, Please SignUp'\n        } else {\n            return true\n        }\n    }\n\n    //HELPER END\n\n    return (\n        <section id=\"signin\" className=\"center-my-child\">\n            <AuthConsumer>\n                {({ login }) => (\n                    <form\n                        name=\"signupForm\"\n                        onSubmit={(event) => onSignIn(event, login)}\n                    >\n                        <header>SignIn</header>\n                        <p className=\"error\"></p>\n                        <div className=\"input-field-wrapper\">\n                            <div className=\"input-field\">\n                                <label htmlFor=\"email\">Email</label>\n                                <br />\n                                <input\n                                    type=\"email\"\n                                    name=\"email\"\n                                    className=\"email\"\n                                    onChange={(e) => {\n                                        console.log(e.target.value)\n                                        setForm({ email: e.target.value })\n                                    }}\n                                />\n                                <p className=\"error\"></p>\n                            </div>\n                            <div className=\"input-field\">\n                                <label htmlFor=\"password\">Password</label>\n                                <br />\n                                <input\n                                    type=\"password\"\n                                    name=\"password\"\n                                    className=\"password\"\n                                    onChange={(e) =>\n                                        setForm({ password: e.target.value })\n                                    }\n                                />\n                                <p className=\"error\"></p>\n                            </div>\n                        </div>\n                        <div className=\"btn-wrapper\">\n                            <button\n                                type=\"submit\"\n                                id=\"signin-btn\"\n                                className=\"btn\"\n                            >\n                                GO\n                            </button>\n                        </div>\n                        <p className=\"or-link\">\n                            or <br />\n                            <Link to=\"/\">SignUp</Link>\n                        </p>\n                    </form>\n                )}\n            </AuthConsumer>\n        </section>\n    )\n}\n\nexport default SignIn\n"]},"metadata":{},"sourceType":"module"}