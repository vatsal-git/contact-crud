{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\dell\\\\Desktop\\\\vatsal-patel\\\\contact-crud\\\\contact-crud\\\\src\\\\components\\\\MyModal.js\",\n    _s = $RefreshSig$();\n\nimport { Button, Form, Modal } from 'react-bootstrap';\nimport React, { useState } from 'react';\nimport { getUUID } from './../helper/HelperFunctions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction MyModal(_ref) {\n  _s();\n\n  let {\n    activeUserId,\n    title\n  } = _ref;\n  const [show, setShow] = useState(false);\n  const [form, setForm] = useState({\n    userId: activeUserId,\n    contactId: '',\n    profile: '',\n    name: '',\n    email: '',\n    phone: ''\n  });\n\n  const handleClose = () => setShow(false);\n\n  const handleShow = () => setShow(true);\n\n  const imageUpload = e => {\n    const file = e.target.files[0];\n    getBase64(file).then(base64 => {\n      setForm({ ...form,\n        profile: base64\n      });\n    });\n  };\n\n  const getBase64 = file => {\n    return new Promise((resolve, reject) => {\n      const reader = new FileReader();\n\n      reader.onload = () => resolve(reader.result);\n\n      reader.onerror = error => reject(error);\n\n      reader.readAsDataURL(file);\n    });\n  };\n  /*\r\n  userContacts: [{userId:'', contactList: [{contactId: '', name: ''}, {contactId: '', name: ''}]}, {}, {}]  \r\n  */\n\n\n  const onFormSubmit = e => {\n    e.preventDefault();\n    const userContacts = JSON.parse(localStorage.getItem('userContacts'));\n\n    if (!userContacts) {\n      localStorage.setItem('userContacts', JSON.stringify([form]));\n    } else {\n      localStorage.setItem('userContacts', JSON.stringify([...userContacts, form]));\n    } // let isUserContactsEmpty = true,\n    //     isUserThere = false,\n    //     isContactListEmpty = true\n    // if (!userContacts) {\n    //     isUserContactsEmpty = true\n    // } else {\n    //     isUserContactsEmpty = false\n    //     userContacts.forEach((userContact) => {\n    //         if (userContact.contactList.length === 0) {\n    //             isContactListEmpty = true\n    //         } else {\n    //             isContactListEmpty = false\n    //         }\n    //     })\n    // }\n    // if (isUserContactsEmpty) {\n    //     localStorage.setItem(\n    //         'userContacts',\n    //         JSON.stringify([{ userId: activeUserId, contactList: [form] }])\n    //     )\n    // } else {\n    //     userContacts.forEach((userContact) => {\n    //         if (userContact.userId === activeUserId) {\n    //             isUserThere = true\n    //             if (isContactListEmpty) {\n    //                 localStorage.setItem(\n    //                     'userContacts',\n    //                     JSON.stringify([\n    //                         ...userContacts,\n    //                         { userId: activeUserId, contactList: [form] },\n    //                     ])\n    //                 )\n    //             } else {\n    //                 localStorage.setItem(\n    //                     'userContacts',\n    //                     JSON.stringify([\n    //                         ...userContacts,\n    //                         {\n    //                             userId: activeUserId,\n    //                             contactList: [\n    //                                 ...userContact.contactList,\n    //                                 form,\n    //                             ],\n    //                         },\n    //                     ])\n    //                 )\n    //             }\n    //         }\n    //     })\n    //     if (!isUserThere) {\n    //         localStorage.setItem('userContacts', [\n    //             ...userContacts,\n    //             { uuid: activeUserId, contactList: [form] },\n    //         ])\n    //     }\n    // }\n\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"add-btn-wrapper\",\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"primary\",\n        onClick: handleShow,\n        className: \"add-btn\",\n        children: \"+\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      show: show,\n      onHide: handleClose,\n      centered: true,\n      children: /*#__PURE__*/_jsxDEV(Form, {\n        onSubmit: e => {\n          onFormSubmit(e);\n        },\n        children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n          closeButton: true,\n          children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n            children: title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n          children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n            controlId: \"formFile\",\n            className: \"mb-3\",\n            onChange: e => {\n              imageUpload(e);\n            },\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Profile\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 140,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"file\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 141,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            className: \"mb-3\",\n            controlId: \"formBasicName\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 144,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"text\",\n              placeholder: \"Enter Name\",\n              onChange: e => setForm({ ...form,\n                name: e.target.value\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 145,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 143,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            className: \"mb-3\",\n            controlId: \"formBasicEmail\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Email address\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 158,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"email\",\n              placeholder: \"Enter email\",\n              onChange: e => setForm({ ...form,\n                email: e.target.value\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 159,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 157,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            className: \"mb-3\",\n            controlId: \"formBasicPhone\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Phone Number\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 172,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"tel\",\n              placeholder: \"Enter phone number\",\n              onChange: e => setForm({ ...form,\n                phone: e.target.value\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 173,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 171,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Modal.Footer, {\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            variant: \"secondary\",\n            onClick: handleClose,\n            children: \"Close\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 186,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            type: \"submit\",\n            variant: \"primary\",\n            children: \"Save Changes\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 189,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n\n_s(MyModal, \"6lNDaxQOzopHMN9Wzy81H6uYh/I=\");\n\n_c = MyModal;\nexport default MyModal;\n\nvar _c;\n\n$RefreshReg$(_c, \"MyModal\");","map":{"version":3,"sources":["C:/Users/dell/Desktop/vatsal-patel/contact-crud/contact-crud/src/components/MyModal.js"],"names":["Button","Form","Modal","React","useState","getUUID","MyModal","activeUserId","title","show","setShow","form","setForm","userId","contactId","profile","name","email","phone","handleClose","handleShow","imageUpload","e","file","target","files","getBase64","then","base64","Promise","resolve","reject","reader","FileReader","onload","result","onerror","error","readAsDataURL","onFormSubmit","preventDefault","userContacts","JSON","parse","localStorage","getItem","setItem","stringify","value"],"mappings":"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","sourcesContent":["import { Button, Form, Modal } from 'react-bootstrap'\r\nimport React, { useState } from 'react'\r\nimport { getUUID } from './../helper/HelperFunctions'\r\n\r\nfunction MyModal({ activeUserId, title }) {\r\n    const [show, setShow] = useState(false)\r\n    const [form, setForm] = useState({\r\n        userId: activeUserId,\r\n        contactId: '',\r\n        profile: '',\r\n        name: '',\r\n        email: '',\r\n        phone: '',\r\n    })\r\n\r\n    const handleClose = () => setShow(false)\r\n    const handleShow = () => setShow(true)\r\n\r\n    const imageUpload = (e) => {\r\n        const file = e.target.files[0]\r\n        getBase64(file).then((base64) => {\r\n            setForm({ ...form, profile: base64 })\r\n        })\r\n    }\r\n    const getBase64 = (file) => {\r\n        return new Promise((resolve, reject) => {\r\n            const reader = new FileReader()\r\n            reader.onload = () => resolve(reader.result)\r\n            reader.onerror = (error) => reject(error)\r\n            reader.readAsDataURL(file)\r\n        })\r\n    }\r\n\r\n    /*\r\n    userContacts: [{userId:'', contactList: [{contactId: '', name: ''}, {contactId: '', name: ''}]}, {}, {}]  \r\n    */\r\n\r\n    const onFormSubmit = (e) => {\r\n        e.preventDefault()\r\n        const userContacts = JSON.parse(localStorage.getItem('userContacts'))\r\n\r\n        if (!userContacts) {\r\n            localStorage.setItem('userContacts', JSON.stringify([form]))\r\n        } else {\r\n            localStorage.setItem(\r\n                'userContacts',\r\n                JSON.stringify([...userContacts, form])\r\n            )\r\n        }\r\n\r\n        // let isUserContactsEmpty = true,\r\n        //     isUserThere = false,\r\n        //     isContactListEmpty = true\r\n\r\n        // if (!userContacts) {\r\n        //     isUserContactsEmpty = true\r\n        // } else {\r\n        //     isUserContactsEmpty = false\r\n\r\n        //     userContacts.forEach((userContact) => {\r\n        //         if (userContact.contactList.length === 0) {\r\n        //             isContactListEmpty = true\r\n        //         } else {\r\n        //             isContactListEmpty = false\r\n        //         }\r\n        //     })\r\n        // }\r\n\r\n        // if (isUserContactsEmpty) {\r\n        //     localStorage.setItem(\r\n        //         'userContacts',\r\n        //         JSON.stringify([{ userId: activeUserId, contactList: [form] }])\r\n        //     )\r\n        // } else {\r\n        //     userContacts.forEach((userContact) => {\r\n        //         if (userContact.userId === activeUserId) {\r\n        //             isUserThere = true\r\n        //             if (isContactListEmpty) {\r\n        //                 localStorage.setItem(\r\n        //                     'userContacts',\r\n        //                     JSON.stringify([\r\n        //                         ...userContacts,\r\n        //                         { userId: activeUserId, contactList: [form] },\r\n        //                     ])\r\n        //                 )\r\n        //             } else {\r\n        //                 localStorage.setItem(\r\n        //                     'userContacts',\r\n        //                     JSON.stringify([\r\n        //                         ...userContacts,\r\n        //                         {\r\n        //                             userId: activeUserId,\r\n        //                             contactList: [\r\n        //                                 ...userContact.contactList,\r\n        //                                 form,\r\n        //                             ],\r\n        //                         },\r\n        //                     ])\r\n        //                 )\r\n        //             }\r\n        //         }\r\n        //     })\r\n        //     if (!isUserThere) {\r\n        //         localStorage.setItem('userContacts', [\r\n        //             ...userContacts,\r\n        //             { uuid: activeUserId, contactList: [form] },\r\n        //         ])\r\n        //     }\r\n        // }\r\n    }\r\n    return (\r\n        <>\r\n            <div className=\"add-btn-wrapper\">\r\n                <Button\r\n                    variant=\"primary\"\r\n                    onClick={handleShow}\r\n                    className=\"add-btn\"\r\n                >\r\n                    +\r\n                </Button>\r\n            </div>\r\n\r\n            <Modal show={show} onHide={handleClose} centered>\r\n                <Form\r\n                    onSubmit={(e) => {\r\n                        onFormSubmit(e)\r\n                    }}\r\n                >\r\n                    <Modal.Header closeButton>\r\n                        <Modal.Title>{title}</Modal.Title>\r\n                    </Modal.Header>\r\n                    <Modal.Body>\r\n                        <Form.Group\r\n                            controlId=\"formFile\"\r\n                            className=\"mb-3\"\r\n                            onChange={(e) => {\r\n                                imageUpload(e)\r\n                            }}\r\n                        >\r\n                            <Form.Label>Profile</Form.Label>\r\n                            <Form.Control type=\"file\" />\r\n                        </Form.Group>\r\n                        <Form.Group className=\"mb-3\" controlId=\"formBasicName\">\r\n                            <Form.Label>Name</Form.Label>\r\n                            <Form.Control\r\n                                type=\"text\"\r\n                                placeholder=\"Enter Name\"\r\n                                onChange={(e) =>\r\n                                    setForm({\r\n                                        ...form,\r\n                                        name: e.target.value,\r\n                                    })\r\n                                }\r\n                            />\r\n                        </Form.Group>\r\n\r\n                        <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\r\n                            <Form.Label>Email address</Form.Label>\r\n                            <Form.Control\r\n                                type=\"email\"\r\n                                placeholder=\"Enter email\"\r\n                                onChange={(e) =>\r\n                                    setForm({\r\n                                        ...form,\r\n                                        email: e.target.value,\r\n                                    })\r\n                                }\r\n                            />\r\n                        </Form.Group>\r\n\r\n                        <Form.Group className=\"mb-3\" controlId=\"formBasicPhone\">\r\n                            <Form.Label>Phone Number</Form.Label>\r\n                            <Form.Control\r\n                                type=\"tel\"\r\n                                placeholder=\"Enter phone number\"\r\n                                onChange={(e) =>\r\n                                    setForm({\r\n                                        ...form,\r\n                                        phone: e.target.value,\r\n                                    })\r\n                                }\r\n                            />\r\n                        </Form.Group>\r\n                    </Modal.Body>\r\n                    <Modal.Footer>\r\n                        <Button variant=\"secondary\" onClick={handleClose}>\r\n                            Close\r\n                        </Button>\r\n                        <Button type=\"submit\" variant=\"primary\">\r\n                            Save Changes\r\n                        </Button>\r\n                    </Modal.Footer>\r\n                </Form>\r\n            </Modal>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default MyModal\r\n"]},"metadata":{},"sourceType":"module"}