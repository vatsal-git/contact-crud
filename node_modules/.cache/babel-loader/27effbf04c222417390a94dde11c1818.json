{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\dell\\\\Desktop\\\\vatsal-patel\\\\contact-crud\\\\contact-crud\\\\src\\\\helper\\\\AuthContext.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/React.createContext();\n\nfunction AuthProvider(_ref) {\n  _s();\n\n  let {\n    children\n  } = _ref;\n  const loggedInUserId = localStorage.getItem('activeUserId');\n  const [isAuth, setIsAuth] = useState(loggedInUserId === '' ? false : true);\n\n  const login = loggedInUserId => {\n    setIsAuth(true);\n    localStorage.setItem('activeUserId', loggedInUserId);\n  };\n\n  const logout = () => {\n    setIsAuth(false);\n    localStorage.setItem('activeUserId', '');\n  };\n\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      isAuth: isAuth,\n      activeUserId: loggedInUserId,\n      login: login,\n      logout: logout\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 9\n  }, this);\n}\n\n_s(AuthProvider, \"QxKFSOXpWaHCwdwuWI3RBdErgEI=\");\n\n_c = AuthProvider;\nconst AuthConsumer = AuthContext.Consumer;\nexport { AuthProvider, AuthConsumer };\n\nvar _c;\n\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"sources":["C:/Users/dell/Desktop/vatsal-patel/contact-crud/contact-crud/src/helper/AuthContext.js"],"names":["React","useState","AuthContext","createContext","AuthProvider","children","loggedInUserId","localStorage","getItem","isAuth","setIsAuth","login","setItem","logout","activeUserId","AuthConsumer","Consumer"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;AAEA,MAAMC,WAAW,gBAAGF,KAAK,CAACG,aAAN,EAApB;;AAEA,SAASC,YAAT,OAAoC;AAAA;;AAAA,MAAd;AAAEC,IAAAA;AAAF,GAAc;AAChC,QAAMC,cAAc,GAAGC,YAAY,CAACC,OAAb,CAAqB,cAArB,CAAvB;AAEA,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBT,QAAQ,CAACK,cAAc,KAAK,EAAnB,GAAwB,KAAxB,GAAgC,IAAjC,CAApC;;AAEA,QAAMK,KAAK,GAAIL,cAAD,IAAoB;AAC9BI,IAAAA,SAAS,CAAC,IAAD,CAAT;AACAH,IAAAA,YAAY,CAACK,OAAb,CAAqB,cAArB,EAAqCN,cAArC;AACH,GAHD;;AAKA,QAAMO,MAAM,GAAG,MAAM;AACjBH,IAAAA,SAAS,CAAC,KAAD,CAAT;AACAH,IAAAA,YAAY,CAACK,OAAb,CAAqB,cAArB,EAAqC,EAArC;AACH,GAHD;;AAKA,sBACI,QAAC,WAAD,CAAa,QAAb;AACI,IAAA,KAAK,EAAE;AACHH,MAAAA,MAAM,EAAEA,MADL;AAEHK,MAAAA,YAAY,EAAER,cAFX;AAGHK,MAAAA,KAAK,EAAEA,KAHJ;AAIHE,MAAAA,MAAM,EAAEA;AAJL,KADX;AAAA,cAQKR;AARL;AAAA;AAAA;AAAA;AAAA,UADJ;AAYH;;GA3BQD,Y;;KAAAA,Y;AA6BT,MAAMW,YAAY,GAAGb,WAAW,CAACc,QAAjC;AAEA,SAASZ,YAAT,EAAuBW,YAAvB","sourcesContent":["import React, { useState } from 'react'\n\nconst AuthContext = React.createContext()\n\nfunction AuthProvider({ children }) {\n    const loggedInUserId = localStorage.getItem('activeUserId')\n\n    const [isAuth, setIsAuth] = useState(loggedInUserId === '' ? false : true)\n\n    const login = (loggedInUserId) => {\n        setIsAuth(true)\n        localStorage.setItem('activeUserId', loggedInUserId)\n    }\n\n    const logout = () => {\n        setIsAuth(false)\n        localStorage.setItem('activeUserId', '')\n    }\n\n    return (\n        <AuthContext.Provider\n            value={{\n                isAuth: isAuth,\n                activeUserId: loggedInUserId,\n                login: login,\n                logout: logout,\n            }}\n        >\n            {children}\n        </AuthContext.Provider>\n    )\n}\n\nconst AuthConsumer = AuthContext.Consumer\n\nexport { AuthProvider, AuthConsumer }\n"]},"metadata":{},"sourceType":"module"}