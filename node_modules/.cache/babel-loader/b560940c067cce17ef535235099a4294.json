{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\vatsa\\\\OneDrive\\\\Desktop\\\\contact-crud\\\\src\\\\helper\\\\AuthContext.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/React.createContext();\n\nfunction AuthProvider(props) {\n  _s();\n\n  const [isAuth, setAuth] = useState(false);\n\n  const login = () => {\n    setAuth(true);\n  };\n\n  const logout = () => {\n    setAuth(false);\n  };\n\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      isAuth: isAuth,\n      login: login,\n      logout: logout\n    },\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 9\n  }, this);\n}\n\n_s(AuthProvider, \"vO9EtH9UHG847jG0lxCXPanlYfk=\");\n\n_c = AuthProvider;\nconst AuthConsumer = AuthContext.Consumer;\nexport { AuthProvider, AuthConsumer };\n\nvar _c;\n\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"sources":["C:/Users/vatsa/OneDrive/Desktop/contact-crud/src/helper/AuthContext.js"],"names":["React","useState","AuthContext","createContext","AuthProvider","props","isAuth","setAuth","login","logout","children","AuthConsumer","Consumer"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;AAEA,MAAMC,WAAW,gBAAGF,KAAK,CAACG,aAAN,EAApB;;AAEA,SAASC,YAAT,CAAsBC,KAAtB,EAA6B;AAAA;;AACzB,QAAM,CAACC,MAAD,EAASC,OAAT,IAAoBN,QAAQ,CAAC,KAAD,CAAlC;;AAEA,QAAMO,KAAK,GAAG,MAAM;AAChBD,IAAAA,OAAO,CAAC,IAAD,CAAP;AACH,GAFD;;AAIA,QAAME,MAAM,GAAG,MAAM;AACjBF,IAAAA,OAAO,CAAC,KAAD,CAAP;AACH,GAFD;;AAIA,sBACI,QAAC,WAAD,CAAa,QAAb;AACI,IAAA,KAAK,EAAE;AAAED,MAAAA,MAAM,EAAEA,MAAV;AAAkBE,MAAAA,KAAK,EAAEA,KAAzB;AAAgCC,MAAAA,MAAM,EAAEA;AAAxC,KADX;AAAA,cAGKJ,KAAK,CAACK;AAHX;AAAA;AAAA;AAAA;AAAA,UADJ;AAOH;;GAlBQN,Y;;KAAAA,Y;AAoBT,MAAMO,YAAY,GAAGT,WAAW,CAACU,QAAjC;AAEA,SAASR,YAAT,EAAuBO,YAAvB","sourcesContent":["import React, { useState } from 'react'\r\n\r\nconst AuthContext = React.createContext()\r\n\r\nfunction AuthProvider(props) {\r\n    const [isAuth, setAuth] = useState(false)\r\n\r\n    const login = () => {\r\n        setAuth(true)\r\n    }\r\n\r\n    const logout = () => {\r\n        setAuth(false)\r\n    }\r\n\r\n    return (\r\n        <AuthContext.Provider\r\n            value={{ isAuth: isAuth, login: login, logout: logout }}\r\n        >\r\n            {props.children}\r\n        </AuthContext.Provider>\r\n    )\r\n}\r\n\r\nconst AuthConsumer = AuthContext.Consumer\r\n\r\nexport { AuthProvider, AuthConsumer }\r\n"]},"metadata":{},"sourceType":"module"}